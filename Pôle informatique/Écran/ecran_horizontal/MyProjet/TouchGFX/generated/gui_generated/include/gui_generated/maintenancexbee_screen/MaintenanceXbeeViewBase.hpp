/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINTENANCEXBEEVIEWBASE_HPP
#define MAINTENANCEXBEEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/maintenancexbee_screen/MaintenanceXbeePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/widgets/canvas/Shape.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class MaintenanceXbeeViewBase : public touchgfx::View<MaintenanceXbeePresenter>
{
public:
    MaintenanceXbeeViewBase();
    virtual ~MaintenanceXbeeViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::TiledImage filigramme;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > boutonAccueil;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > boutonRetour;
    touchgfx::BoxWithBorder fondCategorie;
    touchgfx::TextArea texteCategorie;
    touchgfx::BoxWithBorder fondCategorie_1;
    touchgfx::TextArea texteCategorie_1;
    touchgfx::BoxWithBorder fondCategorie_2;
    touchgfx::TextArea texteCategorie_2;
    touchgfx::ScalableImage grandRobot;
    touchgfx::ScalableImage petitRobot;
    touchgfx::ScalableImage moduleXbeeGrand;
    touchgfx::ScalableImage moduleXbeePetit;
    touchgfx::Line ligneFleche1;
    touchgfx::PainterRGB888 ligneFleche1Painter;
    touchgfx::Line ligneFleche2;
    touchgfx::PainterRGB888 ligneFleche2Painter;
    touchgfx::Shape<4> fleche1;
    touchgfx::PainterRGB888 fleche1Painter;
    touchgfx::Shape<4> fleche2;
    touchgfx::PainterRGB888 fleche2Painter;
    touchgfx::BoxWithBorder boxXbeePetitGrand;
    touchgfx::TextAreaWithOneWildcard texteXbeePetitGrand;
    touchgfx::BoxWithBorder boxXbeeGrandPetit;
    touchgfx::TextAreaWithOneWildcard texteXbeeGrandPetit;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTEXBEEPETITGRAND_SIZE = 17;
    touchgfx::Unicode::UnicodeChar texteXbeePetitGrandBuffer[TEXTEXBEEPETITGRAND_SIZE];
    static const uint16_t TEXTEXBEEGRANDPETIT_SIZE = 17;
    touchgfx::Unicode::UnicodeChar texteXbeeGrandPetitBuffer[TEXTEXBEEGRANDPETIT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MaintenanceXbeeViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // MAINTENANCEXBEEVIEWBASE_HPP
